services:
  postgres:
    image: postgres:15
    container_name: signature-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_admin_password
      # PostgreSQL初期化オプション
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - signature-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -c 'SELECT 1' > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: signature-redis
    ports:
      - "6379:6379"
    networks:
      - signature-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  localstack:
    image: localstack/localstack:3.0
    container_name: signature-localstack
    environment:
      - DEBUG=1
      - SERVICES=s3,lambda,sns,sqs,kms,secretsmanager
      - DATA_DIR=/tmp/localstack/data
      - AWS_DEFAULT_REGION=ap-northeast-1
      - PERSISTENCE=1
      - SKIP_INFRA_DOWNLOADS=1
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - signature-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: signature-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@signature.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - signature-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  localstack_data:
    driver: local

networks:
  signature-network:
    driver: bridge