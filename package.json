{
  "name": "signature-system",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "setup": "npm run setup:clean && npm run setup:install && npm run setup:database && npm run setup:services",
    "setup:clean": "npm run docker:clean && npm cache clean --force",
    "setup:install": "npm install && npm run install:packages",
    "setup:database": "npm run docker:db && npm run db:init",
    "setup:services": "npm run docker:services && npm run aws:init",
    "install:packages": "npm run install:database && npm run install:web && npm run install:lambda",
    "install:database": "cd packages/database && npm install --no-workspaces",
    "install:web": "cd apps/web && npm install",
    "install:lambda": "cd apps/signature-lambda && npm install",
    "docker:clean": "docker compose down -v && docker volume prune -f",
    "docker:db": "docker compose up -d postgres && npm run docker:wait:db",
    "docker:services": "docker compose up -d redis localstack",
    "docker:wait:db": "tsx scripts/wait-for-postgres.ts",
    "db:init": "cd packages/database && npm run db:migrate && npm run db:generate && npm run db:seed",
    "aws:init": "tsx scripts/setup-localstack.ts",
    "dev": "concurrently \"npm run dev:web\" \"npm run dev:lambda\"",
    "dev:web": "cd apps/web && npm run dev",
    "dev:lambda": "cd apps/signature-lambda && npm run dev",
    "dev:studio": "cd packages/database && npx prisma studio",
    "health": "tsx scripts/health-check.ts",
    "clean": "npm run docker:clean && rm -rf node_modules apps/*/node_modules packages/*/node_modules"
  },
  "devDependencies": {
    "@types/node": "^20.19.6",
    "axios": "^1.10.0",
    "concurrently": "^8.2.2",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3"
  }
}
